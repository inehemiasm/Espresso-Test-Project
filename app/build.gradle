apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'spoon'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.inehemias.testingdemo"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.inehemias.testingdemo.testUtils.BaseTestClass"
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    androidTestImplementation 'androidx.test:rules:1.3.0-rc01'
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.archLifecycleVersion"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    // Material design
    implementation "com.google.android.material:material:$rootProject.materialVersion"

    // Testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"

    // Spoon
    implementation 'com.squareup.spoon:spoon-client:1.6.4'

    // Timber to log
    debugImplementation 'com.jakewharton.timber:timber:4.7.1'

}


spoon {

    title = "Demo Test"

    // for debug output
    debug = true

    // To execute the tests device by device */
    sequential = true

    // To grant permissions to Android M >= devices */
    grantAllPermissions = true

    // Clear data before each test
    clearAppDataBeforeEachTest = true

    // Run test example
    //spoonDebugAndroidTest -Ptitle="US Regression Tests" -Plocale="en_us" -Ptag="Regression"

    if(project.hasProperty('locale')) {
        instrumentationArgs.add("locale:" + project.locale)
    }
    if(project.hasProperty('tag')) {
        instrumentationArgs.add("suite:" + project.tag)
    }

    // Can pass N variables as command arguments
    if (project.hasProperty('variable1')) {
        methodName = project.variable1
    }

    if (project.hasProperty('title')) {
        title = project.title
    }
}
